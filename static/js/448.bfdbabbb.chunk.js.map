{"version":3,"file":"static/js/448.bfdbabbb.chunk.js","mappings":"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","sources":["components/Api.js","components/Message/Message.Styled.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/pages/MoviesPages/Movies.Page.styled.js","components/hooks/useSearchMovie.js","components/Search/SearchMovie.styled.js","components/Search/SearchMovie.js","components/pages/MoviesPages/Movies.Page.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'eab6e244ce570b702b61e3907180b3b2',\n};\n\nexport const fetchTrendingDayMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n\n  background-color: white;\n  letter-spacing: 3px;\n  padding: 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const NotFoundMessage = styled.p`\n  position: absolute;\n  top: 25%;\n  left: 45%;\n  transform: translate(-50%, -50%);\n\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 3px;\n\n  color: ${p => p.theme.colors.white};\n\n  .query {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const NotInfo = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 3px;\n\n  color: ${p => p.theme.colors.white};\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  padding: 0 20px;\n  margin-bottom: 55px;\n`;\nexport const ListItem = styled.li`\n  width: 300px;\n  height: auto;\n  transition: ${p => p.theme.transition};\n\n  &:hover {\n    transform: translateY(-6px);\n  }\n`;\nexport const TextContainer = styled.div`\n  color: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.black};\n  padding: 10px;\n\n  .rating {\n    color: ${p => p.theme.colors.white};\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 18px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ListItem, TextContainer, List } from './MovieList.styled';\n\nimport DefaultPoster from '../../Photo/DefaultPoster.webp';\n\nexport const MoviesList = ({ movies, searchResults }) => {\n  const baseUrlApiImg = 'https://image.tmdb.org/t/p/w300/';\n  const location = useLocation();\n\n  const films = movies || searchResults;\n\n  if (!films) {\n    return;\n  }\n\n  return (\n    <List>\n      {films.map(({ id, title, poster_path, vote_average, vote_count }) => {\n        return (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <div>\n                <img\n                  src={\n                    poster_path ? baseUrlApiImg + poster_path : DefaultPoster\n                  }\n                  alt={`Movie poster ${title}`}\n                  width={300}\n                  height={450}\n                />\n                <TextContainer>\n                  <p>{title}</p>\n                  <span className=\"rating\">\n                    rating: {vote_average.toFixed(1)} votes: {vote_count}\n                  </span>\n                </TextContainer>\n              </div>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  margin-top: 100px;\n  padding: 0 20px;\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useSearchMovie = () => {\n  const [queryParams, setQueryParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState([]);\n  const query = queryParams.get('query') ?? '';\n\n  const onSearch = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    console.dir(form);\n\n    setQueryParams({ query: form.elements.searchMovie.value });\n\n    form.reset();\n\n    setSearchMovies([]);\n  };\n\n  return {\n    query,\n    onSearch,\n    searchMovies,\n    setSearchMovies,\n  };\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  text-align: left;\n  position: relative;\n  margin: 1rem auto 0;\n  width: 100%;\n  max-width: 36.625rem;\n\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled.input`\n  width: 500px;\n  height: 60px;\n  background: ${p => p.theme.colors.black};\n  border: 2px solid rgba(128, 128, 128, 0.7);\n  border-radius: 10px;\n  color: ${p => p.theme.colors.white};\n  font-size: 1.25rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 15px;\n  transition: ${p => p.theme.transition};\n\n  margin-right: 10px;\n\n  &:focus,\n  &:hover {\n    border-color: #ffe900;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 124px;\n  height: 60px;\n  padding: 10px;\n  background-color: ${p => p.theme.colors.accent};\n  border-radius: 10px;\n\n  font-size: 1.25rem;\n  font-weight: 400;\n  line-height: 1.5;\n  transition: ${p => p.theme.transition};\n\n  &:hover {\n    background-color: #ffe900;\n  }\n`;\n","import { useSearchMovie } from 'components/hooks/useSearchMovie';\n\nimport { Form, Input, Button } from './SearchMovie.styled';\n\nexport const SearchMovie = () => {\n  const { onSearch } = useSearchMovie();\n\n  return (\n    <Form onSubmit={onSearch}>\n      <Input\n        type=\"text\"\n        name=\"searchMovie\"\n        autoFocus\n        required\n        placeholder=\"Search movies\"\n      ></Input>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { fetchMoviesByQuery } from 'components/Api';\nimport { useEffect, useState } from 'react';\n\nimport { MovieContainer } from './Movies.Page.styled';\nimport { SearchMovie } from 'components/Search/SearchMovie';\nimport { useSearchMovie } from 'components/hooks/useSearchMovie';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport {\n  ErrorMessage,\n  NotFoundMessage,\n} from 'components/Message/Message.Styled';\nimport Loading from 'components/Loading/Loading';\n\nexport default function Movies() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { query, searchMovies, setSearchMovies } = useSearchMovie();\n\n  useEffect(() => {\n    async function getMovieByQuery() {\n      try {\n        if (query === '') {\n          return;\n        }\n        setLoading(true);\n        setError(false);\n        const movie = await fetchMoviesByQuery(query);\n\n        setSearchMovies(movie);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieByQuery();\n  }, [query, setSearchMovies]);\n\n  return (\n    <MovieContainer>\n      <SearchMovie />\n      {query !== '' && searchMovies.length === 0 ? (\n        <NotFoundMessage>\n          Movie <span className=\"query\">{query}</span> not found\n        </NotFoundMessage>\n      ) : (\n        <MoviesList searchResults={searchMovies} />\n      )}\n      {loading && (\n        <Loading\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100vh',\n          }}\n        />\n      )}\n      {error && (\n        <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n      )}\n    </MovieContainer>\n  );\n}\n"],"names":["axios","api_key","fetchTrendingDayMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","_context2","concat","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","ErrorMessage","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","error","NotFoundMessage","_templateObject2","white","accent","NotInfo","_templateObject3","List","ListItem","transition","TextContainer","black","MoviesList","movies","searchResults","location","useLocation","films","_jsx","children","map","title","poster_path","vote_average","vote_count","Link","to","state","from","_jsxs","src","DefaultPoster","alt","width","height","className","toFixed","MovieContainer","useSearchMovie","_queryParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","queryParams","setQueryParams","_useState","useState","_useState2","searchMovies","setSearchMovies","get","onSearch","evt","preventDefault","form","currentTarget","console","dir","elements","searchMovie","value","reset","Form","Input","Button","SearchMovie","onSubmit","type","name","autoFocus","required","placeholder","Movies","loading","setLoading","_useState3","_useState4","setError","_useSearchMovie","useEffect","_getMovieByQuery","movie","t0","finish","getMovieByQuery","length","Loading","style","display","justifyContent","alignItems"],"sourceRoot":""}