{"version":3,"file":"static/js/407.c0c375a3.chunk.js","mappings":"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","sources":["components/Api.js","components/Message/Message.Styled.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/pages/HomePages/HomePage.styled.js","components/pages/HomePages/HomePage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'eab6e244ce570b702b61e3907180b3b2',\n};\n\nexport const fetchTrendingDayMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n\n  background-color: white;\n  letter-spacing: 3px;\n  padding: 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const NotFoundMessage = styled.p`\n  position: absolute;\n  top: 25%;\n  left: 45%;\n  transform: translate(-50%, -50%);\n\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 3px;\n\n  color: ${p => p.theme.colors.white};\n\n  .query {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const NotInfo = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 3px;\n\n  color: ${p => p.theme.colors.white};\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  padding: 0 20px;\n  margin-bottom: 55px;\n`;\nexport const ListItem = styled.li`\n  width: 300px;\n  height: auto;\n  transition: ${p => p.theme.transition};\n\n  &:hover {\n    transform: translateY(-6px);\n  }\n`;\nexport const TextContainer = styled.div`\n  color: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.black};\n  padding: 10px;\n\n  .rating {\n    color: ${p => p.theme.colors.white};\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 18px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ListItem, TextContainer, List } from './MovieList.styled';\n\nimport DefaultPoster from '../../Photo/DefaultPoster.webp';\n\nexport const MoviesList = ({ movies, searchResults }) => {\n  const baseUrlApiImg = 'https://image.tmdb.org/t/p/w300/';\n  const location = useLocation();\n\n  const films = movies || searchResults;\n\n  if (!films) {\n    return;\n  }\n\n  return (\n    <List>\n      {films.map(({ id, title, poster_path, vote_average, vote_count }) => {\n        return (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <div>\n                <img\n                  src={\n                    poster_path ? baseUrlApiImg + poster_path : DefaultPoster\n                  }\n                  alt={`Movie poster ${title}`}\n                  width={300}\n                  height={450}\n                />\n                <TextContainer>\n                  <p>{title}</p>\n                  <span className=\"rating\">\n                    rating: {vote_average.toFixed(1)} votes: {vote_count}\n                  </span>\n                </TextContainer>\n              </div>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  font-weight: 900;\n  font-size: 50px;\n  letter-spacing: 3px;\n  color: ${p => p.theme.colors.accent};\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const ImgContainer = styled.div`\n  padding-top: 55px;\n  margin-bottom: 30px;\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n\n  &::after {\n    content: '';\n\n    background-image: linear-gradient(\n      to top,\n      rgba(0, 0, 0, 0.6) 0,\n      rgba(0, 0, 0, 0) 60%,\n      rgba(0, 0, 0, 0.6) 100%\n    );\n\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingDayMovies } from 'components/Api';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { Heading, ImgContainer } from './HomePage.styled';\nimport HeroPoster from '../../../Photo/hero.webp';\nimport Loading from 'components/Loading/Loading';\nimport { ErrorMessage } from 'components/Message/Message.Styled';\n\nexport default function Home() {\n  const [moviesItems, setMoviesItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movies = await fetchTrendingDayMovies();\n        setMoviesItems(movies);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <ImgContainer>\n        <img src={HeroPoster} alt=\"Movie images\"  />\n        <Heading>Trending today</Heading>\n      </ImgContainer>\n      <MoviesList movies={moviesItems} />\n      {loading && (\n        <Loading\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100vh',\n          }}\n        />\n      )}\n      {error && (\n        <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n      )}\n    </>\n  );\n}\n"],"names":["axios","api_key","fetchTrendingDayMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","_context2","concat","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","ErrorMessage","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","error","NotFoundMessage","_templateObject2","white","accent","NotInfo","_templateObject3","List","ListItem","transition","TextContainer","black","MoviesList","movies","searchResults","location","useLocation","films","_jsx","children","map","title","poster_path","vote_average","vote_count","Link","to","state","from","_jsxs","src","DefaultPoster","alt","width","height","className","toFixed","Heading","ImgContainer","Home","_useState","useState","_useState2","_slicedToArray","moviesItems","setMoviesItems","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","useEffect","_getMovies","t0","finish","getMovies","_Fragment","HeroPoster","Loading","style","display","justifyContent","alignItems"],"sourceRoot":""}