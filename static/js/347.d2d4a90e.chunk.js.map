{"version":3,"file":"static/js/347.d2d4a90e.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbV,EAAAA,EAAAA,IAAU,uBAAuB,KAAD,EAAzC,OAARO,EAAQC,EAAAG,KAAAH,EAAAI,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KAC7B,kBAHkC,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKtBC,EAAkB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAAiB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACpBV,EAAAA,EAAAA,IAAU,uBAADuB,OAAwBF,IAAS,KAAD,EAAlD,OAARd,EAAQe,EAAAX,KAAAW,EAAAV,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KAC7B,gBAH8BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAKlBQ,EAAc,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAE,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACbV,EAAAA,EAAAA,IAAU,UAADuB,OAAWK,IAAM,KAAD,EAAlC,OAARrB,EAAQsB,EAAAlB,KAAAkB,EAAAjB,OAAA,SACPL,EAASM,MAAI,wBAAAgB,EAAAd,OAAA,GAAAY,EAAA,KACrB,gBAH0BG,GAAA,OAAAJ,EAAAV,MAAA,KAAAC,UAAA,KAKdc,EAAc,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAML,GAAE,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAA6B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACbV,EAAAA,EAAAA,IAAU,UAADuB,OAAWK,EAAE,aAAY,KAAD,EAA1C,OAARrB,EAAQ2B,EAAAvB,KAAAuB,EAAAtB,OAAA,SACPL,EAASM,KAAKsB,MAAI,wBAAAD,EAAAnB,OAAA,GAAAkB,EAAA,KAC1B,gBAH0BG,GAAA,OAAAJ,EAAAhB,MAAA,KAAAC,UAAA,KAKdoB,EAAiB,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAMX,GAAE,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAChBV,EAAAA,EAAAA,IAAU,UAADuB,OAAWK,EAAE,aAAY,KAAD,EAA1C,OAARrB,EAAQiC,EAAA7B,KAAA6B,EAAA5B,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAA0B,EAAAzB,OAAA,GAAAwB,EAAA,KAC7B,gBAH6BE,GAAA,OAAAH,EAAAtB,MAAA,KAAAC,UAAA,I,4NCzBjByB,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iHASpBC,EAAgBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wEAM1BG,EAAiBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0KAQ7B,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,I,6BCsDpC,EAtEa,WACX,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdG,GAAaC,EAAAA,EAAAA,MAAbD,SAsBR,OAlBAE,QAAQC,IAAI,wFAAmBb,IAE/Bc,EAAAA,EAAAA,YAAU,WACoB,SAAAC,IAW3B,OAX2BA,GAAArE,EAAAA,EAAAA,GAAAC,IAAAA,MAA5B,SAAAC,IAAA,IAAAoE,EAAA,OAAArE,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoB,OAHpBF,EAAAC,KAAA,EAEIsD,GAAW,GACXI,GAAS,GAAO3D,EAAAE,KAAA,GACIqB,EAAAA,EAAAA,IAAeqC,GAAU,KAAD,EAAtCM,EAAKlE,EAAAG,KACXgD,EAAce,GAAOlE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmE,GAAAnE,EAAA,SAErB2D,GAAS,GAAM,QAEG,OAFH3D,EAAAC,KAAA,GAEfsD,GAAW,GAAOvD,EAAAoE,OAAA,6BAAApE,EAAAO,OAAA,GAAAT,EAAA,yBAErBU,MAAA,KAAAC,UAAA,EAZc,WACawD,EAAAzD,MAAC,KAADC,UAAA,CAY5B4D,EACF,GAAG,CAACT,KAGFU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACvC,EAAQ,CAAAsC,SAAA,CACLlB,GAAiC,IAAtBJ,EAAWwB,OAGtBxB,EAAWyB,KAAI,SAAAhD,GAAI,OACjB2C,EAAAA,EAAAA,KAAA,MAAAE,UACEC,EAAAA,EAAAA,MAACnC,EAAa,CAAAkC,SAAA,EACZF,EAAAA,EAAAA,KAAA,OACEM,IACEjD,EAAKkD,aAAY,GAAA9D,OA/Bb,mCAgCgBA,OAAGY,EAAKkD,cAAY,GAAA9D,OACjC+D,GAETC,IAAG,SAAAhE,OAAWY,EAAKqD,kBAErBP,EAAAA,EAAAA,MAACjC,EAAc,CAAAgC,SAAA,EACbF,EAAAA,EAAAA,KAAA,QAAAE,SAAO7C,EAAKsD,aACZX,EAAAA,EAAAA,KAAA,QAAAE,SAAO7C,EAAKqD,uBAZTrD,EAAKP,GAeT,KAlBPkD,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAAAV,SAAC,mBAsBVlB,IACCgB,EAAAA,EAAAA,KAACa,EAAAA,EAAO,CACNC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,YAIjB7B,IACCY,EAAAA,EAAAA,KAACkB,EAAAA,GAAY,CAAAhB,SAAC,gDAKxB,C,qIC3EagB,EAAerD,EAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yPAazB,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,OAAOc,KAAK,IAGvB+B,EAAkBtD,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+OAW5B,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAGvB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAO8C,MAAM,IAI1BR,EAAU/C,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kHAMpB,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,G","sources":["components/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Message/Message.Styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'eab6e244ce570b702b61e3907180b3b2',\n};\n\nexport const fetchTrendingDayMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n\n  flex-wrap: wrap;\n  gap: 60px;\n`;\n\nexport const CardContainer = styled.div`\n  width: 240px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InfoAboutActor = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 10px;\n\n  color: ${p => p.theme.colors.white};\n  background-color: #000;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieCast } from 'components/Api';\nimport NoImg from '../../Photo/noImage.png';\nimport { CastList, CardContainer, InfoAboutActor } from './Cast.styled';\nimport { ErrorMessage, NotInfo } from 'components/Message/Message.Styled';\nimport Loading from 'components/Loading/Loading';\n\nconst Cast = () => {\n  const [moviesCast, steMOviesCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { moviesId } = useParams();\n\n  const baseUrlApiImg = 'https://image.tmdb.org/t/p/w200';\n\n  console.log('ПОчатковий стан', moviesCast);\n\n  useEffect(() => {\n    async function getMoviesCast() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await fetchMovieCast(moviesId);\n        steMOviesCast(movie);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMoviesCast();\n  }, [moviesId]);\n\n  return (\n    <>\n      <CastList>\n        {!loading && moviesCast.length === 0 ? (\n          <NotInfo>Cast not found</NotInfo>\n        ) : (\n          moviesCast.map(cast => (\n            <li key={cast.id}>\n              <CardContainer>\n                <img\n                  src={\n                    cast.profile_path\n                      ? `${baseUrlApiImg}${cast.profile_path}`\n                      : `${NoImg}`\n                  }\n                  alt={`Actor ${cast.original_name}`}\n                />\n                <InfoAboutActor>\n                  <span>{cast.character}</span>\n                  <span>{cast.original_name}</span>\n                </InfoAboutActor>\n              </CardContainer>\n            </li>\n          ))\n        )}\n\n        {loading && (\n          <Loading\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          />\n        )}\n        {error && (\n          <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n        )}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n\n  background-color: white;\n  letter-spacing: 3px;\n  padding: 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const NotFoundMessage = styled.p`\n  position: absolute;\n  top: 25%;\n  left: 45%;\n  transform: translate(-50%, -50%);\n\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 3px;\n\n  color: ${p => p.theme.colors.white};\n\n  .query {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const NotInfo = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 3px;\n\n  color: ${p => p.theme.colors.white};\n`;\n"],"names":["axios","api_key","fetchTrendingDayMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","_context2","concat","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","CastList","styled","_templateObject","_taggedTemplateLiteral","CardContainer","_templateObject2","InfoAboutActor","_templateObject3","p","theme","colors","white","_useState","useState","_useState2","_slicedToArray","moviesCast","steMOviesCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","moviesId","useParams","console","log","useEffect","_getMoviesCast","movie","t0","finish","getMoviesCast","_jsx","_Fragment","children","_jsxs","length","map","src","profile_path","NoImg","alt","original_name","character","NotInfo","Loading","style","display","justifyContent","alignItems","ErrorMessage","NotFoundMessage","accent"],"sourceRoot":""}